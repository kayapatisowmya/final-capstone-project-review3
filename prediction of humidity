clc; clear;
channelID = 2866225; 
apiKey = 'NP9UV091MIBOZIB4'; 
[data, timeStamps] = thingSpeakRead(channelID, 'Fields', 2, 'ReadKey', apiKey, 'NumPoints', 300);
humidity = data(:, 1);
numSamples = length(humidity);
if isempty(humidity)
disp('No humidity data available for analysis.');
return;
end
smoothed_humidity = movmean(humidity, 5);
sampleIndices = (1:numSamples)';
ft = fittype('a*sin(b*x + c) + d*cos(e*x + f) + g', 'independent', 'x');
opts = fitoptions('Method', 'NonlinearLeastSquares');
opts.StartPoint = [range(smoothed_humidity)/2, 2*pi/24, 0, range(smoothed_humidity)/2, 2*pi/24, 0, mean(smoothed_humidity)];
[humidity_fit, gof] = fit(sampleIndices, smoothed_humidity, ft, opts);
future_samples = (max(sampleIndices) + 1):(max(sampleIndices) + 24 * 7);
pred_humidity = humidity_fit(future_samples);
std_hum = std(smoothed_humidity);
upper_hum = pred_humidity + std_hum;
lower_hum = pred_humidity - std_hum;
figure;
hold on;
plot(sampleIndices, smoothed_humidity, 'r-', 'LineWidth', 2, 'DisplayName', 'Smoothed Humidity');
plot(future_samples, pred_humidity, 'b-', 'LineWidth', 2, 'DisplayName', 'Predicted Humidity');
plot(future_samples, upper_hum, 'k--', 'LineWidth', 1.5, 'DisplayName', '+1 sd Uncertainty');
plot(future_samples, lower_hum, 'k--', 'LineWidth', 1.5, 'DisplayName', '-1 sd Uncertainty');
xlabel('Sample Index (Time)');
ylabel('Humidity (%)');
title('7-Day Humidity Prediction Using Nonlinear Regression');
legend('Location', 'best');
grid on;
hold off;
disp('Humidity Data Analysis:');
disp(['Mean: ', num2str(mean(humidity))]);
disp(['Max: ', num2str(max(humidity))]);
disp(['Min: ', num2str(min(humidity))]);
disp(['Standard Deviation: ', num2str(std(humidity))]);
disp(['Goodness of Fit (R^2): ', num2str(gof.rsquare)]);
disp('Humidity Prediction completed successfully!');
