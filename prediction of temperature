clc; clear;
channelID = 2866225; 
apiKey = 'NP9UV091MIBOZIB4'; 
[data, timeStamps] = thingSpeakRead(channelID, 'Fields', 1, 'ReadKey', apiKey, 'NumPoints', 300);
temperature = data(:, 1);
numSamples = length(temperature);
if isempty(temperature)
disp('No temperature data available for analysis.');
return;
end
temp_mean = mean(temperature);
temp_range = range(temperature);
norm_temperature = (temperature - temp_mean) / temp_range;
smoothed_temperature = movmean(norm_temperature, 5);
sampleIndices = (1:numSamples)';
ft = fittype('a*sin(b*x + c) + d*cos(e*x + f) + g*x + h', 'independent', 'x');
opts = fitoptions('Method', 'NonlinearLeastSquares');
opts.StartPoint = [0.5, 2*pi/24, 0, 0.5, 2*pi/24, 0, 0, 0];
opts.Lower = [-1, 0, -pi, -1, 0, -pi, -Inf, -Inf];
opts.Upper = [1, 2*pi, pi, 1, 2*pi, pi, Inf, Inf];
[temperature_fit, gof] = fit(sampleIndices, smoothed_temperature, ft, opts);
future_samples = (max(sampleIndices) + 1):(max(sampleIndices) + 24 * 7);
norm_pred_temperature = temperature_fit(future_samples);
pred_temperature = (norm_pred_temperature * temp_range) + temp_mean;
std_temp = std(temperature);
upper_temp = pred_temperature + std_temp;
lower_temp = pred_temperature - std_temp;
figure;
hold on;
plot(sampleIndices, temperature, 'r-', 'LineWidth', 2, 'DisplayName', 'Smoothed Temperature');
plot(future_samples, pred_temperature, 'b-', 'LineWidth', 2, 'DisplayName', 'Predicted Temperature');
plot(future_samples, upper_temp, 'k--', 'LineWidth', 1.5, 'DisplayName', '+1 sd Uncertainty');
plot(future_samples, lower_temp, 'k--', 'LineWidth', 1.5, 'DisplayName', '-1 sd Uncertainty');
xlabel('Sample Index (Time)');
ylabel('Temperature (Â°C)');
title('7-Day Temperature Prediction Using Fourier-Linear Model');
legend('Location', 'best');
grid on;
hold off;
disp('Temperature Data Analysis:');
disp(['Mean: ', num2str(mean(temperature))]);
disp(['Max: ', num2str(max(temperature))]);
disp(['Min: ', num2str(min(temperature))]);
disp(['Standard Deviation: ', num2str(std(temperature))]);
disp(['Goodness of Fit (R^2): ', num2str(gof.rsquare)]);
disp('Temperature Prediction completed successfully!');
